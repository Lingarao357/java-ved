1
00:00:05,440 --> 00:00:07,160
In the previous video we dealt

2
00:00:07,160 --> 00:00:09,510
with single and double precision numbers.

3
00:00:09,510 --> 00:00:12,080
In other words dealing with 'floating point' numbers.

4
00:00:12,080 --> 00:00:13,990
In this video we're going to talk about

5
00:00:13,990 --> 00:00:15,580
two additional data types.

6
00:00:15,580 --> 00:00:18,100
The 'char' and also the 'boolean'.

7
00:00:18,100 --> 00:00:19,590
So, let's make a start.

8
00:00:19,590 --> 00:00:21,700
So I'm going to create a new project

9
00:00:21,700 --> 00:00:24,300
I'm going to click on 'Java' as I've done in the last

10
00:00:24,300 --> 00:00:25,670
few videos now.

11
00:00:25,670 --> 00:00:28,760
'Create project...' make sure 'Command Line App.' is selected.

12
00:00:28,760 --> 00:00:35,400
I'm going to call this 'Char' [C-H-A-R] AndBoolean

13
00:00:35,400 --> 00:00:37,790
B double-O L E A N.

14
00:00:38,230 --> 00:00:40,900
Company name (Base package) we're going to make that com.timbuchalka again.

15
00:00:40,900 --> 00:00:42,800
com.timbulchalka, but you can make that

16
00:00:42,800 --> 00:00:45,910
whatever you want. Click on 'Finish'.

17
00:00:46,520 --> 00:00:48,600
And I'll just double-click that to make it more

18
00:00:48,600 --> 00:00:51,110
space and let's get started.

19
00:00:51,110 --> 00:00:53,950
So the two other data types we're going to

20
00:00:53,950 --> 00:00:57,140
talk about in this video are 'char' and 'boolean'.

21
00:00:57,140 --> 00:01:00,440
So firstly, 'char'. You define it as

22
00:01:00,950 --> 00:01:06,230
myChar = and you can put a single quote (') there

23
00:01:06,230 --> 00:01:10,350
and a number or a letter, like so.

24
00:01:10,350 --> 00:01:14,770
That's what I mean, it can literally store one letter or one character.

25
00:01:14,770 --> 00:01:18,740
You can open also a lower case <s>number</s> letter,

26
00:01:18,740 --> 00:01:21,100
you can also mark it as a number

27
00:01:21,100 --> 00:01:23,880
and you can even make it a special character.

28
00:01:23,880 --> 00:01:26,090
Ampersands (&) and so on.

29
00:01:26,090 --> 00:01:28,100
What you can't do is make it more than one.

30
00:01:28,100 --> 00:01:30,690
So we can't put two numbers in there because we'll get an error.

31
00:01:30,690 --> 00:01:34,060
And the error is 'Too many characters in character literal.'

32
00:01:34,060 --> 00:01:35,960
So it literally can only be on character and

33
00:01:35,960 --> 00:01:40,110
it's actually a width of 16. So it's actually 2 bytes.

34
00:01:40,110 --> 00:01:43,580
So that's the standard characters that I'll be typing in there.

35
00:01:43,580 --> 00:01:46,980
But you can also put what's called 'Unicode' characters.

36
00:01:46,980 --> 00:01:50,440
And they are special characters that support multiple languages.

37
00:01:50,440 --> 00:01:52,350
Just to show this to you, I've got a website

38
00:01:52,350 --> 00:01:55,380
I'm just going to go to you know to Google chrome

39
00:01:55,780 --> 00:02:01,120
I'm going to go to a website called 'Unicode-table.com'

40
00:02:01,120 --> 00:02:02,420
And you can see I've just got

41
00:02:02,420 --> 00:02:06,180
'/en'#control-character' on the end.

42
00:02:06,180 --> 00:02:08,760
This gives a list of what's called Unicode

43
00:02:08,760 --> 00:02:11,990
characters. So Java also let's us assign

44
00:02:11,990 --> 00:02:14,390
a variable of data type 'char'

45
00:02:14,390 --> 00:02:16,550
using a special code that I'm going to

46
00:02:16,550 --> 00:02:19,720
show you how to do, so you can notice that

47
00:02:19,720 --> 00:02:22,210
the Unicode table has got our regular

48
00:02:22,210 --> 00:02:24,240
numbers and letters and so forth and special

49
00:02:24,240 --> 00:02:26,830
characters like the percent (%) sign, the dollar ($) sign.

50
00:02:26,830 --> 00:02:28,960
But as we scroll down, they've got lots of other

51
00:02:28,960 --> 00:02:30,820
characters as well.

52
00:02:30,820 --> 00:02:32,820
For example a copyright (©) symbol

53
00:02:33,110 --> 00:02:35,440
and all these other accented letters

54
00:02:35,440 --> 00:02:37,440
and the list goes on. There's quite a few of them.

55
00:02:37,440 --> 00:02:39,280
So we could choose one, and what we need to do

56
00:02:39,280 --> 00:02:41,000
to choose one, we need to start

57
00:02:41,000 --> 00:02:42,600
to the left hand side

58
00:02:42,600 --> 00:02:44,370
So let's just assume we want to

59
00:02:44,370 --> 00:02:46,370
use the copyright (©) character. So we

60
00:02:46,370 --> 00:02:51,320
start with '00A' then we move over to the character

61
00:02:51,320 --> 00:02:53,510
move over to the table element position

62
00:02:53,510 --> 00:02:56,260
in this case '9'. So we'll enter that

63
00:02:56,260 --> 00:02:58,750
the value we need is '00A9'. So it's

64
00:02:58,750 --> 00:03:02,380
starting on row '00A'. Moving right across

65
00:03:02,380 --> 00:03:05,390
to '9'. So '00A9' is the code that we need.

66
00:03:05,390 --> 00:03:07,240
And if we go back to Java,

67
00:03:07,240 --> 00:03:09,110
what we can do is, we can put

68
00:03:09,110 --> 00:03:11,850
a back slash (\), has to go that way

69
00:03:11,850 --> 00:03:14,180
then we put a lower case 'u'

70
00:03:14,180 --> 00:03:18,150
then we can type '00A' in upper case '9'.

71
00:03:18,150 --> 00:03:20,940
Now that's what's called a 'Unicode' character.

72
00:03:20,940 --> 00:03:30,330
So if we now do a print out,

73
00:03:31,610 --> 00:03:34,920
Let's 'Run' that.

74
00:03:37,570 --> 00:03:40,080
And you can see that the character has

75
00:03:40,080 --> 00:03:42,920
been outputted as a 'copyright (©) symbol.

76
00:03:42,920 --> 00:03:45,420
So the actual range of a 'char'

77
00:03:45,420 --> 00:03:48,120
'char' is a width of 16.

78
00:03:48,120 --> 00:03:50,540
Width of 16 which is effectively

79
00:03:50,540 --> 00:03:51,870
two bytes. So that is the amount

80
00:03:51,870 --> 00:03:55,990
that has been allocated for a 'char'.

81
00:03:55,990 --> 00:03:58,650
Second type is called a 'boolean'.

82
00:03:58,650 --> 00:04:00,970
So to use that we type in 'boolean'

83
00:04:00,970 --> 00:04:04,960
'B' 'double-O' 'L E A N'.

84
00:04:04,960 --> 00:04:08,170
'myBoolean ='

85
00:04:08,170 --> 00:04:10,930
and there can only be two values.

86
00:04:10,930 --> 00:04:19,410
The two values are 'true' or 'false'.

87
00:04:19,410 --> 00:04:21,680
That's it! You can't have any other

88
00:04:21,680 --> 00:04:24,370
value for a 'boolean'. And it's used

89
00:04:24,370 --> 00:04:27,150
to test whether something is 'true' or 'false'. So,

90
00:04:27,150 --> 00:04:29,690
it's really good for that. And you'll see that a 'boolean'

91
00:04:29,690 --> 00:04:32,200
boolean's are very popular and used a lot

92
00:04:32,200 --> 00:04:35,450
for conditional logic which we'll be talking about in future videos.

93
00:04:35,450 --> 00:04:36,930
Probably the way you'd use a 'boolean'

94
00:04:36,930 --> 00:04:37,780
you'd do something like:

95
00:04:37,780 --> 00:04:43,330
'boolean isMale = true;'

96
00:04:43,330 --> 00:04:46,720
The variable name is asking a question.

97
00:04:46,720 --> 00:04:48,870
and the value will be whatever the answer's

98
00:04:48,870 --> 00:04:51,550
set to. So this case we're saying is it a male?

99
00:04:51,550 --> 00:04:53,420
as the variable name,

100
00:04:53,420 --> 00:04:54,930
and we've assigned the value of 'true'.

101
00:04:54,930 --> 00:04:57,160
But we'll be talking more about those in detail

102
00:04:57,160 --> 00:04:58,360
in a future video.

103
00:04:58,360 --> 00:05:08,830
So it's challenge time again.

104
00:05:08,830 --> 00:05:14,030
So the challenge for this video is to find the code for the 'registered' (®) symbol

105
00:05:14,030 --> 00:05:17,990
on the same line as the copyright (©) symbol on the webpage that I've shown you.

106
00:05:17,990 --> 00:05:19,990
And incidentally, that website

107
00:05:19,990 --> 00:05:24,400
is in the resources section of the video. So you can click over into the resources section

108
00:05:24,400 --> 00:05:28,380
to find that link, or I'm going to go back and show you that on the page now if you want to write it down.

109
00:05:28,380 --> 00:05:31,550
So you need to find the code for the 'registered' (®) symbol

110
00:05:31,550 --> 00:05:36,740
and that's the symbol that is very much like a copyright (©) with a 'c' in the middle, but has an 'r' (®).

111
00:05:36,740 --> 00:05:41,860
You then need to create a variable of type 'char' and assign it the 'Unicode' value for that symbol

112
00:05:41,860 --> 00:05:43,460
and then display it on the screen.

113
00:05:43,460 --> 00:05:45,640
So follow the three steps as I've shown on the screen

114
00:05:45,640 --> 00:05:47,800
find the code, create a new variable

115
00:05:47,800 --> 00:05:51,760
variable of type 'char' and assign it the 'Unicode' value for that 'registered' (®) symbol

116
00:05:51,760 --> 00:05:53,380
then display it on the screen.

117
00:05:53,380 --> 00:05:57,940
Okay pause the video, do that, come back when you're ready and I'll show you my solution.
PAUSE VIDEO NOW - TRY TO SOLVE - PRESS PLAY

118
00:05:58,250 --> 00:06:00,420
So how did it go, did you manage to figure it out?

119
00:06:00,420 --> 00:06:04,280
Well the code, going back to the browser first,

120
00:06:04,280 --> 00:06:06,870
We start off on '00A'

121
00:06:06,870 --> 00:06:10,010
and in this case the 'r' matches up with the 'E'

122
00:06:10,010 --> 00:06:11,930
So we've got to put an 'E' on the end.

123
00:06:11,930 --> 00:06:15,180
So where we used a '9' for the copyright (©) symbol,

124
00:06:15,180 --> 00:06:16,150
We'll come over here

125
00:06:16,150 --> 00:06:17,580
and it's an 'E', and did you notice that,

126
00:06:17,580 --> 00:06:19,240
I didn't show you that before, but if you actually

127
00:06:19,240 --> 00:06:21,560
hover over there it actually gives you

128
00:06:21,560 --> 00:06:23,870
the code '00AE' as you can see.

129
00:06:23,870 --> 00:06:26,210
So our code is going to be '00AE'

130
00:06:26,210 --> 00:06:27,470
so go back to our code

131
00:06:27,470 --> 00:06:33,470
We're going to put 'char registeredSymbol = '

132
00:06:34,000 --> 00:06:40,780
'\u00AE;' on the end

133
00:06:40,780 --> 00:06:46,830
And just to print it out, "Registered symbol = "

134
00:06:46,830 --> 00:06:48,830
'registeredSymbol'

135
00:06:48,830 --> 00:06:55,830
And that's it! That's he solution so we'll 'Run' that just to confirm.

136
00:06:55,830 --> 00:06:58,030
And you can see we've now got a 'registered' (®) symbol

137
00:06:58,030 --> 00:06:59,930
which is below the copyright (©) symbol which of course is

138
00:06:59,930 --> 00:07:01,830
still printing above that. So that's it for the

139
00:07:01,830 --> 00:07:03,690
'char' and the 'boolean' types.

140
00:07:03,690 --> 00:07:05,900
In the next video we're just going to have a bit of a recap

141
00:07:05,900 --> 00:07:08,450
on the eight (8) data types that we've covered to date.

142
00:07:08,450 --> 00:07:10,850
They were called 'primitive' types and I'll just be

143
00:07:10,850 --> 00:07:13,520
explaining what that means and then we're going to move on

144
00:07:13,520 --> 00:07:16,200
to another data type a special data type

145
00:07:16,200 --> 00:07:17,060
we're going to be looking at

146
00:07:17,060 --> 00:07:18,780
that and that's called 'string'

147
00:07:18,780 --> 00:07:20,240
and we're also going to be looking at that

148
00:07:20,240 --> 00:07:22,240
in the next video.

